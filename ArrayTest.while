let 
	len: 10;
	names[!len]: "Flemming";
	x: true;
	proc lookup(array)
		try
			return array[0][0][0]
		catch e
			print toString(!e)
		yrt
in
	let 
		manynames[3]: names;
		a[2]: 30;
		b[6]: "Hej";
		c[3]: !x;
		f[10]: 5;
		triplearray[3]: manynames
	in
		manynames[0] := a;
		manynames[1] := b;
		manynames[2] := c;
		f[3] := 3;

		print toString(f[4]);

		len := manynames[1][3];
		print toString(!len);

		len := triplearray[1][2][1];
		print toString(!len);

		len := lookup(triplearray);
		print toString(!len);

		len := triplearray[0][0];
		print toString("Array length:");
		print toString(triplearray[0][0].length);
		print toString("Printing array:");
		call printArray(len);
		print toString("Array sum:");
		print toString(sumArray(len));

		try
			f[21] := 4
		catch e
			print toString(!e)
		yrt
	end
end